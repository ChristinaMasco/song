% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/song.plotting.R
\name{song.PlotSongs}
\alias{song.PlotSongs}
\title{Plot the relative timing of songs during an interaction.}
\usage{
song.PlotSongs(indivs, start.time = NA, end.time = NA, breakpt = NA,
  line.wt = 5)
}
\arguments{
\item{indivs}{A list created by \code{\link{song.FromDataObj}} or
\code{\link{song.FromTextFile}} that contains the performance statistics of
each individual.}

\item{start.time}{A numeric value indicating the start time of the
interaction in seconds. An optional parameter - if not specified, the
minimum start time is used (i.e. the start of the first song).}

\item{end.time}{A numeric value indicating the end time of the
interaction in seconds. An optional parameter - if not specified, the
maximum end time is used (i.e. the end of the last song).}

\item{breakpt}{An optional parameter for wrapping the time axis using the
function \code{\link{facet_grid}}. \code{breakpt} is a numeric value
indicating the duration of each plot panel.}

\item{line.wt}{A numeric value indicating the line thickness.}
}
\description{
\code{song.PlotSongs} creates a \code{\link{ggplot}} object depicting the
relative timing of songs during an interaction. Each song is represented by
a line segment plotted on a time axis. Songs are color-coded and
plotted by individual.
}
\details{
The optional parameters \code{start.time} and \code{end.time} set the limits
of the x-axis of the plot. If specified, these parameters can be used to
view a select portion of the interaction. The optional parameter
\code{breakpt} wraps the x-axis, displaying the interaction over a series of
panels arranged vertically. This feature can be especially useful for
viewing short songs over long durations.
}
\examples{
c <- song.FromDataObj(chickadees)

## Plot the entire interaction
song.PlotSongs(c)

## Change the line weight
song.PlotSongs(c, line.wt=10)

## Plot the songs occuring between 02m 30s and 03m 00s
song.PlotSongs(c, start.time=150, end.time=180, line.wt=10)

## Plot the entire interaction in 30 second panels
song.PlotSongs(c, breakpt=30)
}


% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/song.accuracy.R
\name{song.HowManyRand}
\alias{song.HowManyRand}
\title{Determine the optimal number of randomizations.}
\usage{
song.HowManyRand(rndm.pairs, n = c(10, 100, 1000), overlap.function,
  randomize.function)
}
\arguments{
\item{rndm.pairs}{A list created by \code{\link{song.BatchReadSongs}} that
contains the performance statistics of non-interacting pairs.}

\item{n}{A numeric vector indicating the desired number of
randomizations. Unless specified otherwise, the function will evaluate the
accuracy at 10, 100, and 1000 randomizations.}

\item{overlap.function}{The function to be used to calculate the amount of
overlap. \code{\link{song.TimeOverlap}} returns the duration of overlap
in seconds; \code{\link{song.NumOverlap}} returns the number of overlapping
songs.}

\item{randomize.function}{The function to be used to generate the randomized
performances for each individual. Options include
\code{\link{song.RandomizeSampleGaps}},
\code{\link{song.RandomizeKeepGaps}}, and
\code{\link{song.RandomizeKeepSongOrder}}.}
}
\value{
\code{song.HowManyRand} returns a list containing the results of
the simulations (see \code{\link{song.Simulate}} for a description of the
output) and a data frame containing the number of randomizations, the
average error, the average percent error, and the run time.
}
\description{
\code{song.HowManyRand} evaluates the accuracy of a null model as a function of
the number of randomizations, allowing the user to examine the tradeoff between
accuracy and run time.
}
\seealso{
\code{\link{song.AccuracyTest}} for testing the accuracy of the null models.
}


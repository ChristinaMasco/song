% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/song.overlap.R
\name{song.DoSongsOverlap}
\alias{song.DoSongsOverlap}
\title{Determine whether two songs overlap.}
\usage{
song.DoSongsOverlap(song1, song2)
}
\arguments{
\item{song1,song2}{Numeric vectors containing the start and end times
of songs 1 and 2 respectively. The first value in each vector represents the
start time of the song; the second value represents the end time of the
song.}
}
\value{
\code{song.DoSongsOverlap} returns the duration of overlap in
seconds. If \code{song2} begins during \code{song1} (i.e. \code{song1} is
leading), the function returns a positive value. If \code{song1} begins
during \code{song2} (i.e. \code{song2} is leading), the function returns a
negative value. If the songs are non-overlapping, the function returns a
value of 0.
}
\description{
\code{song.DoSongsOverlap} determines whether two songs overlap and returns
the duration of overlap in seconds. The sign of this value indicates the
order of the overlapping songs.
}
\examples{
## songs overlap and song1 is leading
song1 <- c(0.0, 1.0)
song2 <- c(0.5, 2.0)
song.DoSongsOverlap(song1,song2)

## songs overlap and song1 is lagging
song1 <- c(1.0, 3.0)
song2 <- c(0.0, 2.0)
song.DoSongsOverlap(song1,song2)

## songs do not overlap
song1 <- c(0.0, 1.0)
song2 <- c(2.0, 3.0)
song.DoSongsOverlap(song1,song2)
}
\seealso{
For performances containing many songs, use
\code{\link{song.TimeOverlap}} to calculate the total duration of overlap
and \code{\link{song.NumOverlap}} to calculate the total number of
overlapping songs.
}

